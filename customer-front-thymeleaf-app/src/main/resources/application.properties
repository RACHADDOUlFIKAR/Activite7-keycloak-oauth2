spring.application.name=customer-app
server.port=8090
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true


spring.security.oauth2.client.registration.google.clientId=656725663468-ur8f05r3rrtmbmfaotdeoe634cldav7i.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.security.oauth2.client.registration.github.clientId=380db8b2e431f5f05581
spring.security.oauth2.client.registration.github.client-secret=832ccf2aba7ab737b2e8c8335fb4ad9cdad09b17
spring.security.oauth2.client.provider.github.user-name-attribute=login


spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sdia-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=v5ufZUGNEEWiVSugHLjlaSO1YbyQCt6m
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8090/login/oauth2/code/sdia-customer-client}
#spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/sdia-realm}

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTH:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_AUTH_TOKEN:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/token}
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${JWT_JWK_SET_URI:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/certs}
inventory.service.base.uri=${INVENTORY_SERVICE_BASE_URI:http://localhost:8098}
